:javascript
  var year = new Date().getFullYear();
  var month = new Date().getMonth();
  var day = new Date().getDate();

  var eventData = {
  events : [
           {'id':1, 'start': new Date(year, month, day, 12), 'end': new Date(year, month, day, 13, 35),'title':'Lunch with Mike'},
           {'id':2, 'start': new Date(year, month, day, 13), 'end': new Date(year, month, day, 14, 45),'title':'Dev Meeting'},
           {'id':3, 'start': new Date(year, month, day, 13), 'end': new Date(year, month, day, 14, 45),'title':'Dev Meeting'},
           {'id':4, 'start': new Date(year, month, day, 12), 'end': new Date(year, month, day, 13, 35),'title':'Lunch with Mike'},
           {'id':5, 'start': new Date(year, month, day, 11), 'end': new Date(year, month, day, 14, 45),'title':'Dev Meeting'},
           {'id':6, 'start': new Date(year, month, day, 12), 'end': new Date(year, month, day, 13, 35),'title':'Lunch with Mike'},
           {'id':7, 'start': new Date(year, month, day, 13), 'end': new Date(year, month, day, 14, 45),'title':'Dev Meeting'},
           {'id':2, 'start': new Date(year, month, day, 11), 'end': new Date(year, month, day, 13, 35),'title':'Lunch with Mike'},
           ]
  };

  $(document).ready(function() {
    $('#calendar').weekCalendar({
      timeslotsPerHour: 6,
      timeslotHeight: 10,
      readonly: true,
      hourLine: true,
      businessHours: {start: 8, end: 18, limitDisplay: true},
      data: eventData,
      allowCalEventOverlap: true,
      overlapEventsSeparate: true,
      daysToShow: 1,
      showHeader: false,
      dateFormat: "",  // delete date in header
      longDays: ['', '', '', '', '', '', ''], // deletes day in header
      height: function($calendar) {
        return $(window).height() - $('h1').outerHeight(true);
      },
      eventRender : function(calEvent, $event) {
        if (calEvent.end.getTime() < new Date().getTime()) {
          $event.css('backgroundColor', '#aaa');
          $event.find('.time').css({'backgroundColor': '#999', 'border':'1px solid #888'});
        }
      },
      eventAfterRender: function(calEvent, element) {
        $(element).toggle(function () {
                $(element).css({"background-color": "#000000"});
                $("#timeslots").append('<span>' + calEvent.id + '</span>');
                }, function() {
                $(element).css({"background-color": "#CCC"});
                $("#timeslots").find("span:contains('" + calEvent.id +
                    "')").remove();
                });
      },
      eventNew: function(calEvent, $event) {
        displayMessage('Added eventStart: ' + calEvent.start + 'End: ' + calEvent.end);
        alert('You\'ve added a new event. You would capture this event, add the logic for creating a new event with your own fields, data and whatever backend persistence you require.');
      },
      eventDrop: function(calEvent, $event) {
        displayMessage('Moved EventStart: ' + calEvent.start + 'End: ' + calEvent.end);
      },
      eventResize: function(calEvent, $event) {
        displayMessage('Resized EventStart: ' + calEvent.start + 'End: ' + calEvent.end);
      },
      eventClick: function(calEvent, element, freeBusyManager, $calendar, DomEvent) {
        displayMessage('Clicked EventStart: ' + calEvent.start + 'End: ' + calEvent.end);
      },
      eventMouseover: function(calEvent, $event) {
        displayMessage('Mouseover EventStart: ' + calEvent.start + 'End: ' + calEvent.end + 'ID: ' + calEvent.id);
      },
      eventMouseout: function(calEvent, $event) {
        displayMessage('Mouseout EventStart: ' + calEvent.start + 'End: ' + calEvent.end);
      },
      noEvents: function() {
        displayMessage('There are no events for this week');
      }
    });

    function displayMessage(message) {
        $('#message').html(message).fadeIn();
    }

    $('').prependTo($('body'));
  });
:css
  p.description {
    font-size: 0.8em;
    padding: 1em;
    position: absolute;
    top: 3.2em;
    margin-right: 400px;
  }

  #message {
    font-size: 0.7em;
    position: absolute;
    top: 1em;
    right: 1em;
    width: 350px;
    display: none;
    padding: 1em;
    background: #ffc;
    border: 1px solid #dda;
  }

  .highlight {
    background-color: #000000;
  }

  #calendar {
    width: 800px;

  }

%h1 Week Calendar Demo
#timeslots
%p.description This calendar demonstrates a basic calendar. Events triggered are displayed in the message area. Appointments in the past are shaded grey.
#calendar
