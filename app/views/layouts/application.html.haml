%html
  %head
    %title Bsmi
    = stylesheet_link_tag    "application", :media => "all"
    = javascript_include_tag "application" 
    = csrf_meta_tags
    = yield :head
  %body
    .navbar.navbar-fixed-top
      .navbar-inner
        .container-fluid
          %a.btn.btn-navbar{"data-target" => ".nav-collapse", "data-toggle" => "collapse"}
            %span.icon-bar
            %span.icon-bar
            %span.icon-bar
          %a.brand{:href => "#"} CalTeach STePs
          .nav-collapse.collapse
            %ul.nav.pull-right
              - if current_user
                %li
                  %a{:href => logout_path} Logout
              - else
                %li
                  %a{:href => new_user_path} Register
                %li
                  %a{:href => login_path} Login
    .container-fluid      
      - if current_user
        - if current_user.owner_type == "Student"
          %ul.nav.nav-tabs
            - Semester.where(:status => Semester::PUBLIC).each do |s|
              - if s == Semester.current_semester
                %li.active
                  %a= "#{s.name} #{s.year}"
              - else
                %li
                  %a= "#{s.name} #{s.year}"

      .sidebar.left.sidebar-nav
        - if current_user
          - if ["MentorTeacher", "CalFaculty", "StudentAdvisor"].include? current_user.owner_type
            .well
              %ul.nav.nav-list
                // Mentor Teachers
                %li.nav-header
                  Mentor Teachers Menu
                - if current_user
                  - if current_user.owner_type == "MentorTeacher"
                    %li
                      %a{:href => mentor_teacher_schedule_path} Edit Schedule
                  %li
                    %a{:href => edit_user_path(current_user.id)} Edit Profile

                // Student Advisors
                %li.nav-header
                  Structure
                %li
                  %a{:href => courses_path} Courses
                %li
                  %a{:href => cal_courses_path} Cal Courses
                %li
                  %a{:href => schools_path} Schools
                %li
                  %a{:href => districts_path} Districts
                %li.nav-header
                  Manage Users
                %li
                  %a{:href => advisors_path} Advisors
                %li
                  %a{:href => mentor_teachers_path} Mentor Teachers
                %li
                  %a{:href => students_path} Students
                
                // Cal Faculty
                %li.nav-header
                  Faculty
                %li
                  %a{:href => "/cal_faculty/my_students"} My Students
                %li
                  %a{:href => "/cal_faculty/my_mentor_teachers"} My Mentor Teachers

        - if current_user
          - if current_user.owner_type == "Student"
            // Students
            %ul.nav.nav-list
              %li.nav-header STEP 1: Enrollment
              %li
                %a{:href => select_courses_student_path(current_user.id, @semester.id)} Select Courses
              %li.nav-header STEP 2: Timeslot Preferences
              - current_user.owner.cal_courses.order("name ASC").each do |c|
                %li
                  %a{:href => student_select_timeslots_path(current_user.id, @semester.id, c.id)}= c.name
              %li.nav-header STEP 3: Field Placements
              %li
                %a{:href => placements_student_path(current_user.id, @semester.id)} View Field Placements
            
              %li.divider

              %li
                %a{:href => edit_user_path(current_user.id)} Edit Profile
              %li
                %a{:href => courses_student_path(current_user.id, @semester.id)} Enrollment

      .content.fixed-fixed
        - [:notice, :error, :error_list, :alert].each do |level| 
          - unless flash[level].blank?
            - if level == :notice
              .alert.alert-info 
                = flash[level]
            - elsif level == :error
              .alert.alert-error 
                = flash[level]
            - elsif level == :error_list
              .alert.alert-error
                %ul
                  - flash[level].each do |error|
                    %li
                      = error
            - else
              .alert.alert-block 
                = flash[level]
        = yield



